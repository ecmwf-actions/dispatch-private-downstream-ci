name: Trigger private downstream
description: |
  A Github action that triggers workflows using `repository_dispatch` event and monitors result.
inputs:
  token:
    description: Github token with READ and WRITE access to actions, code, and pull requests and READ access to metadata
    required: true
  owner:
    description: Owner of the target repository.
    required: true
  repository:
    description: Name of the repository that contains target workflow.
    required: true
  event_type:
    description: Corresponds to `repository_dispatch.types` of the target workflow.
    required: true
  payload:
    description: JSON object containing data to be passed to target workflow.
    required: true
  github_token:
    description: Token used to comment on a PR if the action is called within a PR. If using GitHub Actions token ($GITHUB_TOKEN), the calling job needs pull-request write permissions.
    required: true
    default: ${{ github.token }}

runs:
  using: composite
  steps:
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        # cache: 'pip'
        # cache-dependency-path: ${{ github.action_path }}/requirements.txt

        # caching dependencies is not possible in composite actions
        # see https://github.com/actions/setup-python/issues/361
        # and https://github.com/actions/toolkit/issues/1035

    - run: |
        echo "::group::Pip install"
        pip install -r $GITHUB_ACTION_PATH/requirements.txt
        echo "::endgroup::"
      shell: bash

    - name: Trigger & monitor
      run: python $GITHUB_ACTION_PATH/main.py ${{ inputs.token }} ${{ inputs.github_token }} ${{ inputs.owner }} ${{ inputs.repository }} ${{ inputs.event_type }} '${{ inputs.payload }}'
      shell: bash
